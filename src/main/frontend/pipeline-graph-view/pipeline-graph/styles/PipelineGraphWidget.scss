// TODO: Remove manual PWGx- namespacing, replace with tooling
circle.halo {
  fill: none;
}

.PWGx-svgResultStatusOutline {
  stroke: $graph-connector-grey;
  fill: none;
}

.icon-skipped {
  color: $graph-connector-grey;
  fill: $graph-connector-grey;

  .svg-icon {
    color: $graph-connector-grey;
    fill: $graph-connector-grey;
  }
}

.PWGx-result-status-glyph {
  stroke: none;
  fill: #fff;
}

.PWGx-svgResultStatusSolid {
  transform: translateZ(0);

  > circle.statusColor {
    &.success {
      fill: $status-success;
    }
    &.failure {
      fill: $status-failure;
    }
    &.unstable {
      fill: $status-unstable;
    }
    &.aborted {
      fill: $graph-connector-grey;
    }
    &.paused {
      fill: $status-paused;
    }
    &.unknown {
      fill: $status-unknown;
    }

    .pipeline-node-selected & {
      stroke: none;
    }
  }
}

.PWGx-progress-spinner.running circle.statusColor {
  fill: none;
  stroke: $progress-bg;
}

.PWGx-progress-spinner.running path {
  fill: none;
  stroke: $progress-bar-color;
}

.PWGx-progress-spinner.pc-over-100 circle.statusColor {
  fill: none;
  stroke: $progress-bar-color;
}

.PWGx-progress-spinner.pc-over-100 path {
  fill: none;
  stroke: $status-unstable;
}

.PWGx-progress-spinner.running.spin {
  animation: progress-spinner-rotate 4s linear;
  animation-iteration-count: infinite;
}

@keyframes progress-spinner-rotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.PWGx-progress-spinner circle.inner,
.PWGx-progress-spinner.running.spin circle.inner {
  display: none;
  animation: progress-spinner-pulsate 1.2s ease-out;
  animation-iteration-count: infinite;
  opacity: 0;
}

.PWGx-progress-spinner.running circle.inner {
  display: block;
  fill: $progress-bar-color;
  stroke: $progress-bar-color;
}

@keyframes progress-spinner-pulsate {
  0% {
    transform: scale(0.1, 0.1);
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: scale(1.2, 1.2);
    opacity: 0;
  }
}

.PWGx-progress-spinner.queued circle.statusColor {
  fill: none;
  stroke: $graph-connector-grey;
}

.PWGx-progress-spinner.queued circle.statusColor.inner {
  display: block;
  fill: $graph-connector-grey;
  stroke: $graph-connector-grey;
}

.PWGx-progress-spinner.queued path {
  fill: none;
  stroke: none;
}

.PWGx-pipeline-connector {
  stroke: $graph-connector-grey;
}

.PWGx-pipeline-node {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 1.75rem;
  height: 1.75rem;
  z-index: 0;

  &::before {
    content: "";
    position: absolute;
    inset: -3px;
    background: var(--card-background);
    border-radius: 50%;
    z-index: -1;
  }

  &:has(a) {
    &::after {
      content: "";
      position: absolute;
      inset: 1px;
      border-radius: 50%;
      z-index: -1;
      transition: var(--standard-transition);
      box-shadow: 0 0 0 0.5rem transparent;
    }

    &:focus-visible {
      outline: none;
    }

    &:hover {
      &::after {
        background: oklch(from var(--color) l c h / 0.1);
      }
    }

    &:active,
    &:focus {
      &::after {
        background: oklch(from var(--color) l c h / 0.15);
        box-shadow: 0 0 0 0.25rem oklch(from var(--color) l c h / 0.15);
      }
    }

    &:focus-visible {
      &::after {
        box-shadow: 0 0 0 0.2rem var(--text-color) !important;
      }
    }
  }

  a {
    position: absolute;
    inset: 0;
    background: transparent;
  }

  svg {
    width: 1.75rem;
    height: 1.75rem;
  }

  &:has(.PWGx-pipeline-node-terminal) {
    &::before {
      inset: 4px;
    }
  }
}

.PWGx-pipeline-node-terminal {
  width: 10px;
  height: 10px;
  border: 2px solid $graph-connector-grey;
  border-radius: 10px;

  &::before {
    display: none !important;
  }
}

.PWGx-pipeline-connector-skipped {
  stroke: $graph-connector-grey;
  stroke-opacity: 0.25;
}

.PWGx-pipeline-small-label {
  font-size: 0.75rem;
}

.PWGx-pipeline-big-label {
  font-weight: var(--font-bold-weight);
  font-size: 0.8125rem;
}

.PWGx-pipeline-big-label.pgv-graph-node--synthetic {
  font-style: italic;
}

.PWGx-pipeline-big-label.pgv-graph-node--skeleton {
  color: var(--text-color-secondary);
  font-weight: normal;
}

.PWGx-pipeline-small-label.selected {
  font-weight: bold;
  margin-top: 3px;
}

.PWGx-pipeline-selection-highlight circle {
  fill: none;
}
